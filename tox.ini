[tox]
skipdist=True
skip_missing_interpreters=
    True
envlist =
    py37
    py38
    py39
    py310
    py311
    pypy37
    pypy38
    pypy39

[testenv]
setenv =
#    recreate = True
deps =
#   dill
whitelist_externals =
    bash
commands =
    {envpython} -m pip install .
    py37: bash -c "failed=0; for test in py3.7/multiprocess/tests/*.py; do if [[ $test != *"main"* && $test != *"mp_"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py38: bash -c "failed=0; for test in py3.8/multiprocess/tests/*.py; do if [[ $test != *"main"* && $test != *"mp_"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py39: bash -c "failed=0; for test in py3.9/multiprocess/tests/*.py; do if [[ $test != *"main"* && $test != *"mp_"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py310: bash -c "failed=0; for test in py3.10/multiprocess/tests/*.py; do if [[ $test != *"main"* && $test != *"mp_"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    py311: bash -c "failed=0; for test in py3.11/multiprocess/tests/*.py; do if [[ $test != *"main"* && $test != *"mp_"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    pypy37: bash -c "failed=0; for test in pypy3.7/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    pypy38: bash -c "failed=0; for test in pypy3.8/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
    pypy39: bash -c "failed=0; for test in pypy3.9/multiprocess/tests/*.py; do if [[ $test != *"main"* ]]; then echo $test ; {envpython} $test || failed=1; fi; done; exit $failed"
